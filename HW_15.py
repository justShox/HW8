import telebot
import buttons as bt
import database as db
from telebot.types import ReplyKeyboardRemove
from geopy import Nominatim

bot = telebot.TeleBot('6480576822:AAF4ypfj97ECwf2dzwu5P6sXNQNTVW1a9Vo')
# –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–∞—Ä—Ç
geolocator = Nominatim(
    user_agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36')


@bot.message_handler(commands=['start'])
def welcome(message):
    user_id = message.from_user.id
    check = db.checker(user_id)
    if message.text == '/start'.strip():
        if check:
            bot.send_message(user_id, f'–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º {message.from_user.first_name}!', reply_markup=bt.main_bt())
            bot.register_next_step_handler(message, calculator)
        else:
            bot.send_message(user_id, f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ {message.from_user.first_name}!'
                                      f'\n–î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é. –î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–µ –∏–º—è:')
            bot.register_next_step_handler(message, get_name)
    elif message.text == '/help':
        user_id = message.from_user.id
        bot.send_message(user_id, '–í–æ—Ç –≤—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –±–æ—Ç—É:'
                                  '\n–≠—Ç–æ—Ç –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤–∞–ª—é—Ç—ã(USD, EUR, UZS)'
                                  '\n–ü–æ –∫—É—Ä—Å—É:'
                                  '\n1 –¥–æ–ª–ª–∞—Ä - 12,365 —Å—É–º\n1 –µ–≤—Ä–æ - 13,572 —Å—É–º'
                                  '\n–ò—Å—Ç–æ—á–Ω–∏–∫: https://www.google.com/finance/markets/currencies',
                         reply_markup=bt.main_bt())
        bot.register_next_step_handler(message, calculator)


def get_name(message):
    user_id = message.from_user.id
    name = message.text.strip().title()
    bot.send_message(user_id, f'–ü—Ä–∏–Ω—è—Ç–æ! –¢–µ–ø–µ—Ä—å –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º –∫–æ–Ω—Ç–∞–∫—Ç–æ–º:', reply_markup=bt.num_bt())
    bot.register_next_step_handler(message, contact, name)


def contact(message, name):
    user_id = message.from_user.id
    if message.contact:
        number = message.contact.phone_number
        bot.send_message(user_id, '–û—Ç–ª–∏—á–Ω–æ‚úÖ! –ò –ø–æ—Å–ª–µ–¥–Ω–µ–µ –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –ª–æ–∫–∞—Ü–∏–µ–π', reply_markup=bt.loc_bt())
        bot.register_next_step_handler(message, location, name, number)
    else:
        bot.send_message(user_id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –∫–æ–Ω—Ç–∞–∫—Ç–æ–ºüòì', reply_markup=bt.num_bt())
        bot.register_next_step_handler(message, contact, name)


def location(message, name, number):
    user_id = message.from_user.id
    if message.location:
        loc = str(geolocator.reverse(f'{message.location.latitude}, '
                                     f'{message.location.longitude}'))
        db.registration(name, user_id, number, loc)
        bot.send_message(user_id, '–ì–æ—Ç–æ–≤–æ! –í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ãüòä', reply_markup=bt.main_bt())
        bot.register_next_step_handler(message, calculator)

    else:
        bot.send_message(user_id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –≥–µ–æ–ø–æ–∑–∏—Ü–∏–µ–πüôÉ', reply_markup=bt.loc_bt())
        bot.register_next_step_handler(message, location, name, number)


@bot.message_handler(content_types=['text'])
def calculator(message):
    user_id = message.from_user.id
    if message.text == '–ö–∞–ª—å–∫—É–ª—è—Ç–æ—ÄüßÆ'.strip():
        bot.send_message(user_id, '–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É: ', reply_markup=bt.currency_bt())
    elif message.text == 'USDüá∫üá∏ - UZSüá∫üáø'.strip():
        bot.send_message(user_id, '–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: ')
        bot.register_next_step_handler(message, summa)
    elif message.text == 'USDüá∫üá∏ - EURüá™üá∫'.strip():
        bot.send_message(user_id, '–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: ')
        bot.register_next_step_handler(message, summa1)
    elif message.text == 'UZSüá∫üáø - USDüá∫üá∏'.strip():
        bot.send_message(user_id, '–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: ')
        bot.register_next_step_handler(message, summa2)
    elif message.text == 'UZSüá∫üáø - EURüá™üá∫'.strip():
        bot.send_message(user_id, '–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: ')
        bot.register_next_step_handler(message, summa3)
    elif message.text == 'EURüá™üá∫ - USDüá∫üá∏'.strip():
        bot.send_message(user_id, '–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: ')
        bot.register_next_step_handler(message, summa4)
    elif message.text == 'EURüá™üá∫ - UZSüá∫üáø'.strip():
        bot.send_message(user_id, '–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: ')
        bot.register_next_step_handler(message, summa5)
    elif message.text == '/help'.strip():
        user_id = message.from_user.id
        bot.send_message(user_id, '–í–æ—Ç –≤—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –±–æ—Ç—É:'
                                  '\n–≠—Ç–æ—Ç –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤–∞–ª—é—Ç—ã(USD, EUR, UZS)'
                                  '\n–ü–æ –∫—É—Ä—Å—É:'
                                  '\n1 –¥–æ–ª–ª–∞—Ä - 12,365 —Å—É–º\n1 –µ–≤—Ä–æ - 13,572 —Å—É–º'
                                  '\n–ò—Å—Ç–æ—á–Ω–∏–∫: https://www.google.com/finance/markets/currencies',
                         reply_markup=bt.main_bt())
        bot.register_next_step_handler(message, calculator)
    elif message.text == '/start'.strip():
        user_id = message.from_user.id
        check = db.checker(user_id)
        if check:
            bot.send_message(user_id, f'–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º {message.from_user.first_name}!', reply_markup=bt.main_bt())
            bot.register_next_step_handler(message, calculator)
        else:
            bot.send_message(user_id, f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ {message.from_user.first_name}!'
                                      f'\n–î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é. –î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–µ –∏–º—è:')
            bot.register_next_step_handler(message, get_name)
    else:
        bot.send_message(user_id, '–¢–∞–∫–∞—è –∫–æ–º–∞–Ω–¥–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è, –≤–≤–µ–¥–∏—Ç–µ /start')


def summa(message):
    global amount
    user_id = message.from_user.id
    try:
        amount = float(message.text.strip())
    except ValueError:
        bot.send_message(user_id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ!')
        bot.register_next_step_handler(message, summa)
        return
    count = amount * 12365
    bot.send_message(user_id, f'${amount} –≤ —Å—É–º–º–∞—Ö {round(count, 2)}, –ú–æ–∂–µ—Ç–µ –≤–≤–µ—Å—Ç–∏ –µ—â–µ —á–∏—Å–ª–æ',
                     reply_markup=ReplyKeyboardRemove())
    bot.register_next_step_handler(message, summa)


def summa1(message):
    global amount
    user_id = message.from_user.id
    try:
        amount = float(message.text.strip())
    except ValueError:
        bot.send_message(user_id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ!')
        bot.register_next_step_handler(message, summa1)
        return
    count = amount * 0.91
    bot.send_message(user_id, f'${amount} –≤ –µ–≤—Ä–æ = ‚Ç¨{round(count, 2)}, –ú–æ–∂–µ—Ç–µ –≤–≤–µ—Å—Ç–∏ –µ—â–µ —á–∏—Å–ª–æ',
                     reply_markup=ReplyKeyboardRemove())
    bot.register_next_step_handler(message, summa1)


def summa2(message):
    global amount
    user_id = message.from_user.id
    try:
        amount = float(message.text.strip())
    except ValueError:
        bot.send_message(user_id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ!')
        bot.register_next_step_handler(message, summa2)
        return
    count = amount * 0.00008101
    bot.send_message(user_id, f'{amount} —Å—É–º–º –≤ –¥–æ–ª–ª–∞—Ä–∞—Ö = ${round(count, 2)}, –ú–æ–∂–µ—Ç–µ –≤–≤–µ—Å—Ç–∏ –µ—â–µ —á–∏—Å–ª–æ',
                     reply_markup=ReplyKeyboardRemove())
    bot.register_next_step_handler(message, summa2)


def summa3(message):
    global amount
    user_id = message.from_user.id
    try:
        amount = float(message.text.strip())
    except ValueError:
        bot.send_message(user_id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ!')
        bot.register_next_step_handler(message, summa3)
        return
    count = amount * 0.00007399
    bot.send_message(user_id, f'{amount} c—É–º–º –≤ –µ–≤—Ä–æ = ‚Ç¨{round(count, 2)}, –ú–æ–∂–µ—Ç–µ –≤–≤–µ—Å—Ç–∏ –µ—â–µ —á–∏—Å–ª–æ',
                     reply_markup=ReplyKeyboardRemove())
    bot.register_next_step_handler(message, summa3)


def summa4(message):
    global amount
    user_id = message.from_user.id
    try:
        amount = float(message.text.strip())
    except ValueError:
        bot.send_message(user_id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ!')
        bot.register_next_step_handler(message, summa4)
        return
    count = amount * 1.09
    bot.send_message(user_id, f'‚Ç¨{amount} –≤ –¥–æ–ª–ª–∞—Ä–∞—Ö = ${round(count, 2)}, –ú–æ–∂–µ—Ç–µ –≤–≤–µ—Å—Ç–∏ –µ—â–µ —á–∏—Å–ª–æ',
                     reply_markup=ReplyKeyboardRemove())
    bot.register_next_step_handler(message, summa4)


def summa5(message):
    global amount
    user_id = message.from_user.id
    try:
        amount = float(message.text.strip())
    except ValueError:
        bot.send_message(user_id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ!')
        bot.register_next_step_handler(message, summa5)
        return
    count = amount * 13572
    bot.send_message(user_id, f'‚Ç¨{amount} –≤ —Å—É–º–º–∞—Ö = {round(count, 2)}, –ú–æ–∂–µ—Ç–µ –≤–≤–µ—Å—Ç–∏ –µ—â–µ —á–∏—Å–ª–æ',
                     reply_markup=ReplyKeyboardRemove())
    bot.register_next_step_handler(message, summa5)


bot.polling(none_stop=True)
